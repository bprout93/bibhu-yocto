#!/bin/bash

# OE Build Enviroment Setup Script
#
# Copyright (C) 2006-2011 Linux Foundation
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

if [ -z "$BUILDDIR" ]; then
    echo >&2 "Error: The build directory (BUILDDIR) must be set!"
    exit 1
fi

mkdir -p $BUILDDIR/conf

if ! (test -d "$BUILDDIR"); then
    echo >&2 "Error: The builddir ($BUILDDIR) does not exist!"
    exit 1
fi

if ! (test -w "$BUILDDIR"); then
    echo >&2 "Error: Cannot write to $BUILDDIR, perhaps try sourcing with a writable path? i.e. . oe-init-build-env ~/my-build"
    exit 1
fi

#checking the validity parameter following available systems
if [  $# -gt 2 ];then
	echo "Error : A parameter is required :
    - the system type : like mident or sabrelite
	"
	exit 1
fi

IS_SYSTEM_VALID=0
AVAILABLE_IMAGES=
AVAILABLE_MACHINES=
SYSTEM_SUBDIRECTORY=
if [ "$1" = "bibhu" ]; then
	IS_SYSTEM_VALID=1
	AVAILABLE_IMAGES="
	bibhu-bpA20-image
	bibhu-bbb-image
	"
	AVAILABLE_MACHINES=("bpA20" "bbb" "sama5d3" "rpi0")
	SYSTEM_SUBDIRECTORY="meta-bibhu"
fi

cd "$BUILDDIR"

TEMPLATECONF=${TEMPLATECONF:-"$SYSTEM_SUBDIRECTORY"/conf}

#
# $TEMPLATECONF can point to a directory for the template local.conf & bblayers.conf
#
if [ "x" != "x$TEMPLATECONF" ]; then
    if ! (test -d "$TEMPLATECONF"); then
	# Allow TEMPLATECONF=meta-xyz/conf as a shortcut
	if [ -d "$OEROOT/oe-bibhu/$TEMPLATECONF" ]; then
	    TEMPLATECONF="$OEROOT/oe-bibhu/$TEMPLATECONF"
	fi
	if ! (test -d "$TEMPLATECONF"); then
	    echo >&2 "Error: '$TEMPLATECONF' must be a directory containing local.conf & bblayers.conf"
	    return
	fi
    fi
    OECORELAYERCONF="$TEMPLATECONF/bblayers.conf.sample"
    OECORELOCALCONF="$TEMPLATECONF/local.conf.sample"
fi

if [ "x" = "x$OECORELOCALCONF" ]; then
    OECORELOCALCONF="$OEROOT/oe-core/meta/conf/local.conf.sample"
fi
if ! (test -r "$BUILDDIR/conf/local.conf"); then
cat <<EOM
You had no conf/local.conf file. This configuration file has therefore been
created for you with some default values. You may wish to edit it to use a
different MACHINE (target hardware) or enable parallel build options to take
advantage of multiple cores for example. See the file for more information as
common configuration options are commented.

The Yocto Project has extensive documentation about OE including a reference manual
which can be found at:
    http://yoctoproject.org/documentation

For more information about OpenEmbedded see their website:
    http://www.openembedded.org/

EOM
    cp -f $OECORELOCALCONF $BUILDDIR/conf/local.conf
fi

if [ "x" = "x$OECORELAYERCONF" ]; then
    OECORELAYERCONF="$OEROOT/oe-core/meta/conf/bblayers.conf.sample"
fi
if ! (test -r "$BUILDDIR/conf/bblayers.conf"); then
cat <<EOM
You had no conf/bblayers.conf file. The configuration file has been created for
you with some default values. To add additional metadata layers into your
configuration please add entries to this file.

The Yocto Project has extensive documentation about OE including a reference manual
which can be found at:
    http://yoctoproject.org/documentation

For more information about OpenEmbedded see their website:
    http://www.openembedded.org/


EOM

    # Put the abosolute path to the layers in bblayers.conf so we can run
    # bitbake without the init script after the first run
    sed "s|##COREBASE##|$OEROOT|g" $OECORELAYERCONF > $BUILDDIR/conf/bblayers.conf
fi



# Prevent disturbing a new GIT clone in same console
unset OECORELOCALCONF
unset OECORELAYERCONF

### Set machine name: update conf/local.conf file
if [ $# -eq 2 ] && [ "$2" != "" ];then
	len=${#AVAILABLE_MACHINES[*]}
	for (( i=0; i<len; i++ ))
	do
		if [ "${AVAILABLE_MACHINES[$i]}" = "$2" ];then
			printf "\n### Machine name configuration. ###\n"
			printf "Configuring conf/local.conf for ${AVAILABLE_MACHINES[$i]} board\n"
			sed -i "s/^MACHINE\(.*\)/MACHINE = \"$2\"/" conf/local.conf
		fi
	done
fi
#printf "Using Machine: %s\n\n" "`grep "^MACHINE[ ]\+=" conf/local.conf | cut -d'"' -f2`"
MACHINE_CONFIG="`grep "^MACHINE[ ]\+=" conf/local.conf | cut -d'"' -f2`"

echo -e "\n\033[1;34m### Shell environment set up for builds \033[1;31m($MACHINE_CONFIG board)\033[1;34m ###\033[0m"

cat <<EOM

You can now run 'bitbake <target>'

Available targets are:
$AVAILABLE_IMAGES

EOM



unset IS_SYSTEM_VALID
unset AVAILABLE_IMAGES
unset AVAILABLE_MACHINES
unset MACHINE_CONFIG
unset SYSTEM_SUBDIRECTORY
